package com.automation.pojos;


import java.util.Objects;

/**
 * This class represents spartan POJO
 * Example of JSON response:
 * {
 * "id": 393,               ->   private int id;
 * "name": "Michael Scott", ->   private String name;
 * "gender": "Male",        ->   private String gender;
 * "phone": 6969696969      ->   @SerializedName("phone") private long phoneNumber;
 * }
 * SerializedName  - an annotation that indicates this member should be serialized to JSON with
 * * the provided name value as its field name.
 */
public class Spartan {
    private int id;
    private String name;
    private String gender;
    private long phone;

//we skip id because id autogenerated by server
    public Spartan( String name, String gender, long phone) {
        this.name = name;
        this.gender = gender;
        this.phone = phone;
    }

    public Spartan(int id, String name, String gender, long phone) {
        this.id = id;
        this.name = name;
        this.gender = gender;
        this.phone = phone;
    }

    public Spartan() {
    }

    public int getId() {
        return id;
    }
   // we don't put set id because we don't want to change the id

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public String getGender() {
        return gender;
    }

    public void setGender(String gender) {
        this.gender = gender;
    }

    public long getPhone() {
        return phone;
    }

    public void setPhone(long phone) {
        this.phone = phone;
    }

    @Override
    public String toString() {
        return "Spartan{" +
                "id=" + id +
                ", name='" + name + '\'' +
                ", gender='" + gender + '\'' +
                ", phone=" + phone +
                '}';
    }


    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof Spartan)) return false;
        Spartan spartan = (Spartan) o;
        return id == spartan.id;
    }

    @Override
    public int hashCode() {
        return Objects.hash(id, name, gender, phone);
    }
}
